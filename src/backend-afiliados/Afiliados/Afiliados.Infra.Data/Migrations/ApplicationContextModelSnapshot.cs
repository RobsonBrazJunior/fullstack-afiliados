// <auto-generated />
using System;
using Afiliados.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Afiliados.Infra.Data.Migrations
{
	[DbContext(typeof(ApplicationContext))]
	partial class ApplicationContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "7.0.11")
				.HasAnnotation("Relational:MaxIdentifierLength", 128);

			SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

			modelBuilder.Entity("Afiliados.Domain.Entities.Affiliated", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uniqueidentifier");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("VARCHAR(100)");

					b.Property<Guid>("ProducerId")
						.HasColumnType("uniqueidentifier");

					b.HasKey("Id");

					b.HasIndex("ProducerId");

					b.ToTable("Affiliateds", (string)null);
				});

			modelBuilder.Entity("Afiliados.Domain.Entities.Producer", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uniqueidentifier");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("VARCHAR(100)");

					b.HasKey("Id");

					b.ToTable("Producers", (string)null);
				});

			modelBuilder.Entity("Afiliados.Domain.Entities.Sale", b =>
				{
					b.Property<Guid>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uniqueidentifier");

					b.Property<DateTime>("Date")
						.HasColumnType("datetime2");

					b.Property<string>("Product")
						.IsRequired()
						.HasColumnType("VARCHAR(30)");

					b.Property<string>("Seller")
						.IsRequired()
						.HasColumnType("VARCHAR(20)");

					b.Property<byte>("Type")
						.HasColumnType("tinyint");

					b.Property<int>("Value")
						.HasColumnType("int");

					b.HasKey("Id");

					b.ToTable("Sales", (string)null);
				});

			modelBuilder.Entity("Afiliados.Domain.Entities.Affiliated", b =>
				{
					b.HasOne("Afiliados.Domain.Entities.Producer", "Producer")
						.WithMany("Affiliateds")
						.HasForeignKey("ProducerId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired();

					b.Navigation("Producer");
				});

			modelBuilder.Entity("Afiliados.Domain.Entities.Producer", b =>
				{
					b.Navigation("Affiliateds");
				});
#pragma warning restore 612, 618
		}
	}
}
